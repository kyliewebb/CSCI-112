/**
 * Kylie Webb
 * CSCI 112 - Lab 9
 * 4/23/2016
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct{
	int atomnum;
	char symbol[444];
	char name[100];
	double weight;
	char state[100];
	char bond[100];
	char discovered[5];
} element;

FILE *fr;

element split(char *, element *);
void print(element *, int, char *);

int main(int argc, char *argv[]){
	if(argc < 2){
		printf("ERROR: Please provide at least one program argument.");
		return 0;
	}
	//printf("hey"); //TEST
	
	//else{
	char el[118];
	element *array = (element*)calloc(argc, sizeof(element));
	int i;
	char *pch;	
	char argv2[1];

	//printf("Hey"); //TEST

	strcpy(argv2, argv[1]);
	
	pch = strchr(argv2, '.');
	int test;

	//printf("hey"); //TEST

	if(pch != NULL){
		test = 0;
	}else{
		test = 1;
	}

	if(argc >= 1){
		printf("ERROR: Please provide at least one program argument.");
	}

	fr = fopen("element_db.csv", "r");
	
	while(fgets(el, sizeof(element), fr) != NULL){
		fgets(el, sizeof(element), fr);
		for(i = 0; i < sizeof(el); i++){
			array[i] = split(el, array);
		}
	}	
	fclose(fr);	

	int j;
	for(j = 1; j < 118; j++){
		if(strcmp(array->symbol, "argv[j]") != 0){
			printf("WARNING: No such element: %s", argv[j]);
		}else{
			print(array, test, argv2);
		}
	}	
	return 0;
}

element split(char *el, element * array){

	char temp[100] = ""; 
	int i, counter = 0, length =(int)strlen(el), workLen = 0;
	for(i = 0; i < length; i++){
		if(el[i] == ',' && workLen > 0){
		switch(counter) {
			case 0:
				array->atomnum = atoi(temp);
				break;
			case 1:
				strcpy(array->symbol, temp);
				break;
			case 2:
				strcpy(array->name, temp);
				break;
			case 3:
				array->weight = atof(temp);
				break;
			case 4:
				strcpy(array->state, temp);
				break;
			case 5:
				strcpy(array->bond, temp);
			case 6:
				strcpy(array->discovered, temp);
			case 7:
				strcpy(temp, &el[i-1]);
				i = length;
				break;
			default:
				break;
			}
			workLen =0;
		 	counter++;
			memset(temp, 0, 100 );	
		}
		else if(el[i] != ','){
			 temp[workLen] = el[i];
			 workLen++;
		}
	}

	return *array;
}

void print(element *array, int *test, char *argv2){
 	int i;
	
	for(i = 2; i < 118; i++){
		int space = 1;
	if(test == 0){
		FILE *fp;
		
		fp = fopen(argv2, "w+");
		fprintf(fp, "---------------\n");
		fprintf(fp, "| %d\t%.4f\n", array[space].atomnum, array[space].weight);
		fprintf(fp, "| %s\t%s\n", array[space].symbol, array[space].name);
		fprintf(fp, "| %s\n", array[space].state);
		fprintf(fp, "| %s\n", array[space].bond);
		fprintf(fp, "| Found: %s\n", array[space].discovered);
		fprintf(fp, "---------------\n");
	}
	else if(test == 1){
		printf("---------------\n");
		printf("| %d\t%.4f\n", array[space].atomnum, array[space].weight);
		printf("| %s\t%s\n", array[space].symbol, array[space].name);
		printf("| %s\n", array[space].state);
		printf("| %s\n", array[space].bond);
		printf("| Found: %s\n", array[space].discovered);
		printf("---------------\n");
	}
	}
}
